class Solution {
public:
    string longestPalindrome(string s) {
        
         int n = s.length();
        vector<vector<int>>dp(n,vector<int>(n,-1));
        int len = 0;
        int mi , mj;
        
        for(int gap = 0 ;gap < n; gap++){
            for(int i = 0,j = gap; j< n ;j++,i++){
                
                if(gap==0) dp[i][j] = 1;
                
                else if(gap==1){
                    
                    if(s[i]==s[j]) dp[i][j] = 2;
                    else dp[i][j] = 0;
                }
                else{
                    
                    if(s[i]==s[j] && dp[i+1][j-1]!=0) dp[i][j] = 2 + dp[i+1][j-1];
                    else dp[i][j] = 0;
                }
                if(len<dp[i][j]){
                    
                    mi = i;
                    mj = j;
                    len = dp[i][j];
                }
            }
        }
        
        string ans = "";
        for(int i =mi; i<=mj;i++){
            
            ans += s[i]; 
        }
        return ans;
    }
};
