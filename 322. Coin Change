//my approach
#define ull unsigned long long 
class Solution {
private:
    ull solver(vector<int> & coins, int & amount, int &n , int i,ull sum,vector<vector<int>> & dp){
        if(sum>amount) return 1e7;
        if(sum==amount) return 0;
        if(i==n) return 1e7;
        if(dp[i][sum]!=-1) return dp[i][sum];
        
        ull ops1 = 1 + solver(coins,amount,n,i,sum+coins[i],dp);
        ull ops2 = 0 + solver(coins,amount,n,i+1,sum,dp);
        
        return dp[i][sum] = min(ops1,ops2);
    }
public:
    int coinChange(vector<int>& coins, int amount) {
     
        int n = coins.size();
        vector<vector<int>>dp(n,vector<int>(amount+1,-1));
       ull a = solver(coins,amount,n,0,0,dp);
        
        if(a==1e7) return -1;
        return a;
    }
};
