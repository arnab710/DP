//memo + tabu
#include <bits/stdc++.h> 
// int solver(string &str, string &ptr, int &n1, int &n2, int i1, int i2,vector<vector<int>>& dp){
    
//     if(i1==n1 || i2==n2) return 0;
//     if(dp[i1][i2]!=-1) return dp[i1][i2];
    
//     if(str[i1]==ptr[i2]){
//         return dp[i1][i2] = 1 + solver(str,ptr,n1,n2,i1+1,i2+1,dp);
//     }
//     else{
//         int a = solver(str,ptr,n1,n2,i1+1,i2,dp);
//         int b = solver(str,ptr,n1,n2,i1,i2+1,dp);
//         return dp[i1][i2] = max(a,b);
//     }
//     return 0;
// }
int canYouMake(string &str, string &ptr)
{
    int n1 = str.size();
    int n2 = ptr.size();
    vector<vector<int>>dp(n1+1,vector<int>(n2+1,-1));
  // int a =  solver(str,ptr,n1,n2,0,0,dp);
    
    for(int i1 = n1;i1>=0;i1--){
        for(int i2 = n2;i2>=0;i2--){
            
            if(i1==n1 || i2==n2) dp[i1][i2] = 0;
            else{
                if(str[i1]==ptr[i2]) dp[i1][i2] = 1 + dp[i1+1][i2+1];
                else  dp[i1][i2] = max(dp[i1+1][i2] , dp[i1][i2+1]);
            }
        }
    }
    int a = dp[0][0];
    return (abs(n1 - n2) + (2*(min(n1,n2)-a)));
}
