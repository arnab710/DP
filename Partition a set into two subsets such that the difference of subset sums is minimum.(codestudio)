#include <bits/stdc++.h>
int solver(int &sum, int &sum1, vector<int> & arr, int &n, int i,vector<vector<int>>& dp){
    if(i==n){
        int sum2  = sum - sum1;
        return (abs(sum1 - sum2));
    }
    if(dp[i][sum1]!=-1) return dp[i][sum1];
    sum1 += arr[i];
    int ans1 = solver(sum,sum1,arr,n,i+1,dp);
    sum1 -= arr[i];
    
    int ans2 = solver(sum,sum1,arr,n,i+1,dp);
    
    return dp[i][sum1] = min(ans1,ans2);
}
int minSubsetSumDifference(vector<int>& arr, int n)
{
	int sum = 0;
    for(auto &it: arr) sum += it;
    int sum1 = 0;
    int mini = INT_MAX;
    vector<vector<int>>dp(n,vector<int>(sum+1,-1));
      return solver(sum,sum1,arr,n,0,dp);
}
